{"version":3,"sources":["services.js","components/User.js","assets/icons.js","components/Playlist.js","components/NextPrevButtons.js","components/Seeds.js","components/Playlists.js","App.js","reportWebVitals.js","index.js"],"names":["serverUrl","process","LOCAL_HEROKU","getData","url","a","options","headers","Authorization","localStorage","getItem","json","fetch","then","response","ok","status","error","refresh","data","catch","console","getTokens","log","setItem","access_token","queryString","window","location","search","urlParams","URLSearchParams","tokens","refresh_token","get","prevAccessToken","prevRefreshToken","href","User","setLoadedData","useState","user","setUser","useEffect","prevState","r","className","display_name","pin","viewBox","fill","xmlns","width","height","d","stroke","pinSolid","Playlist","playlist","toggleTracks","pinPlaylist","unPinPlaylist","isChecked","isPinned","tracks","id","onClick","map","track","name","type","checked","onChange","e","artists","NextPrevButtons","currentPlaylistIndex","allPlaylists","displayPreviousPlaylist","displayNextPlaylist","length","Seeds","seedTracks","circles","setCircles","newCircles","i","push","c","Playlists","likedTracks","setLikedTracks","recommendedTracks","setRecommendedTracks","setSeedtracks","pinnedPlaylists","setPinnedPlaylists","currentPlaylist","setCurrentPlaylist","items","seeds","reduce","p","uniqueId","setAllPlaylists","target","some","filter","pinnedTracks","recommended","seed","playlists","indexOf","pinned","App","loadedData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfd3da5d.chunk.js","sourcesContent":["// const serverUrl = process.env.ON_HEROKU\r\n//   ? 'https://spotify-moodboard.herokuapp.com'\r\n//   : process.env.LOCAL_HEROKU || process.env.NODE_ENV === 'production'\r\n//   ? 'http://localhost:5000'\r\n//   : 'http://localhost:8888';\r\nconst serverUrl =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:8888'\r\n    : process.env.LOCAL_HEROKU\r\n    ? 'http://localhost:5000'\r\n    : 'https://spotify-moodboard.herokuapp.com';\r\ngetTokens();\r\n\r\nfunction getUser() {\r\n  return getData('https://api.spotify.com/v1/me');\r\n}\r\nfunction getLikedTracks() {\r\n  return getData('https://api.spotify.com/v1/me/tracks');\r\n}\r\nfunction getRecommendedTracks(seeds) {\r\n  const uri =\r\n    'https://api.spotify.com/v1/recommendations?seed_tracks=' +\r\n    seeds.reduce((p, c, i) => (i === 0 ? c.id : p + ',' + c.id), '');\r\n  return getData(uri);\r\n}\r\n\r\nasync function getData(url) {\r\n  const options = {\r\n    headers: { Authorization: 'Bearer ' + localStorage.getItem('accessToken') },\r\n    json: true,\r\n  };\r\n\r\n  return fetch(url, options)\r\n    .then(async function (response) {\r\n      if (!response.ok) {\r\n        if (response.status === 401 || response.error?.status === 401) {\r\n          await refresh();\r\n          return getData(url);\r\n        }\r\n        throw response;\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      return data;\r\n    })\r\n    .catch(error => {\r\n      console.error('Catched Error:', error);\r\n      return error;\r\n    });\r\n}\r\n\r\nasync function refresh() {\r\n  await getTokens();\r\n  console.log('refreshing token:' + localStorage.getItem('refreshToken'));\r\n  fetch(\r\n    `${serverUrl}/refresh_token?refresh_token=` +\r\n      localStorage.getItem('refreshToken')\r\n  )\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        if (response.status === 401 || response.error?.status === 401) {\r\n          console.log('Refreshing token failed.');\r\n        }\r\n        throw response;\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      localStorage.setItem('accessToken', data.access_token);\r\n      return data.access_token;\r\n    })\r\n    .catch(error => {\r\n      console.error('Refreshing token error:', error);\r\n    });\r\n}\r\n\r\nasync function getTokens() {\r\n  const queryString = window.location.search;\r\n  const urlParams = new URLSearchParams(queryString);\r\n  const tokens = {\r\n    refresh_token: urlParams.get('refresh_token'),\r\n    access_token: urlParams.get('access_token'),\r\n  };\r\n  const prevAccessToken = localStorage.getItem('accessToken');\r\n  const prevRefreshToken = localStorage.getItem('refreshToken');\r\n\r\n  if (\r\n    (tokens.refresh_token === '' || !tokens.refresh_token) &&\r\n    (prevRefreshToken === '' ||\r\n      !prevRefreshToken ||\r\n      prevRefreshToken === 'null')\r\n  ) {\r\n    window.location.href = `${serverUrl}/authorization`;\r\n    return;\r\n  }\r\n\r\n  localStorage.setItem('accessToken', tokens.access_token || prevAccessToken);\r\n  localStorage.setItem(\r\n    'refreshToken',\r\n    tokens.refresh_token || prevRefreshToken\r\n  );\r\n}\r\n\r\nexport { getUser, getLikedTracks, getRecommendedTracks, getTokens };\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { getUser } from '../services';\r\n\r\nfunction User({ setLoadedData }) {\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    setLoadedData(prevState => [...prevState, { user: false }]);\r\n    getUser()\r\n      .then(r => setUser(r) || {})\r\n      .then(() => setLoadedData(prevState => [...prevState, { user: true }]));\r\n  }, []);\r\n  return <p className=\"user secondary\">{user.display_name}</p>;\r\n}\r\nexport default User;\r\n","export const mongodb = (\r\n  <svg\r\n    viewBox=\"0 0 15 15\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"15\"\r\n    height=\"15\"\r\n  >\r\n    <path\r\n      d=\"M7.5.5l.369-.338a.5.5 0 00-.738 0L7.5.5zm0 13l-.393.309a.5.5 0 00.786 0L7.5 13.5zM4.623 9.838l-.393.31.393-.31zm.246-6.467L4.5 3.032l.369.337zm5.262 0l.369-.338-.369.337zm.246 6.467l.393.31-.393-.31zM8 15V.5H7V15h1zm-.107-1.809L5.016 9.53l-.786.618 2.877 3.662.786-.618zM5.237 3.708L7.87.838 7.13.162 4.5 3.032l.736.676zM7.131.838l2.632 2.87.737-.675L7.869.163 7.13.837zm2.853 8.691l-2.877 3.662.786.618 2.877-3.662-.786-.618zm-.221-5.82a4.5 4.5 0 01.22 5.82l.787.618a5.5 5.5 0 00-.27-7.114l-.737.675zm-4.747 5.82a4.5 4.5 0 01.221-5.82L4.5 3.032a5.5 5.5 0 00-.27 7.114l.786-.618z\"\r\n      fill=\"currentColor\"\r\n    ></path>\r\n  </svg>\r\n);\r\nexport const circle = (\r\n  <svg\r\n    viewBox=\"0 0 15 15\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"15\"\r\n    height=\"15\"\r\n  >\r\n    <path d=\"M.5 7.5a7 7 0 1014 0 7 7 0 00-14 0z\" stroke=\"currentColor\"></path>\r\n  </svg>\r\n);\r\nexport const circleSolid = (\r\n  <svg\r\n    viewBox=\"0 0 15 15\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"15\"\r\n    height=\"15\"\r\n  >\r\n    <path\r\n      d=\"M7.5 0a7.5 7.5 0 100 15 7.5 7.5 0 000-15z\"\r\n      fill=\"currentColor\"\r\n    ></path>\r\n  </svg>\r\n);\r\nexport const pin = (\r\n  <svg\r\n    viewBox=\"0 0 15 15\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"15\"\r\n    height=\"15\"\r\n  >\r\n    <path\r\n      d=\"M7.5 15V8.5m0 0a4 4 0 100-8 4 4 0 000 8z\"\r\n      stroke=\"currentColor\"\r\n    ></path>\r\n  </svg>\r\n);\r\nexport const pinSolid = (\r\n  <svg\r\n    viewBox=\"0 0 15 15\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"15\"\r\n    height=\"15\"\r\n  >\r\n    <path\r\n      d=\"M7.5 0A4.5 4.5 0 007 8.973V15h1V8.973A4.5 4.5 0 007.5 0z\"\r\n      fill=\"currentColor\"\r\n    ></path>\r\n  </svg>\r\n);\r\n","import { pin, pinSolid } from '../assets/icons';\r\n\r\nfunction Playlist({\r\n  playlist,\r\n  toggleTracks,\r\n  pinPlaylist,\r\n  unPinPlaylist,\r\n  isChecked,\r\n  isPinned,\r\n}) {\r\n  return (\r\n    <div key={playlist.id}>\r\n      {playlist.tracks ? (\r\n        <>\r\n          {isPinned(playlist.id) ? (\r\n            <button onClick={() => unPinPlaylist(playlist.id)}>\r\n              <div>{pinSolid} Unpin</div>\r\n            </button>\r\n          ) : (\r\n            <button onClick={() => pinPlaylist(playlist)}>\r\n              <div>{pin} Pin</div>\r\n            </button>\r\n          )}\r\n          <ul>\r\n            {playlist.tracks?.map(track => (\r\n              <li key={track.id} name={track.id}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={isChecked(track.id)}\r\n                  name={track.id}\r\n                  onChange={e => {\r\n                    toggleTracks(e);\r\n                    pinPlaylist(playlist);\r\n                  }}\r\n                />\r\n                {track.artists[0].name} - {track.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        'Select up to 5 tracks as seeds for recommendations.'\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Playlist;\r\n","function NextPrevButtons({\r\n  currentPlaylistIndex,\r\n  allPlaylists,\r\n  displayPreviousPlaylist,\r\n  displayNextPlaylist,\r\n}) {\r\n  return (\r\n    <>\r\n      {currentPlaylistIndex > 0 ? (\r\n        <button className=\"previous-button\" onClick={displayPreviousPlaylist}>\r\n          previous\r\n        </button>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {currentPlaylistIndex + 1 < allPlaylists.length ? (\r\n        <button className=\"next-button\" onClick={displayNextPlaylist}>\r\n          next\r\n        </button>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NextPrevButtons;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction Seeds({ seedTracks }) {\r\n  const [circles, setCircles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const newCircles = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      if (i < seedTracks.length) {\r\n        newCircles.push('@');\r\n      } else {\r\n        newCircles.push('O');\r\n      }\r\n    }\r\n    setCircles(newCircles);\r\n  }, [seedTracks]);\r\n  return (\r\n    <p className=\"seeds secondary\">\r\n      Seeds:{' '}\r\n      {circles.map((c, i) => (\r\n        <span className=\"circle\" key={i}>\r\n          {c}\r\n        </span>\r\n      ))}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default Seeds;\r\n","import { useEffect, useState } from 'react';\r\nimport uniqueId from 'lodash.uniqueid';\r\nimport '../styles/Playlists.css';\r\n\r\nimport { getLikedTracks, getRecommendedTracks } from '../services';\r\nimport Playlist from './Playlist';\r\nimport NextPrevButtons from './NextPrevButtons';\r\nimport Seeds from './Seeds';\r\n\r\nfunction Playlists({ setLoadedData }) {\r\n  const [likedTracks, setLikedTracks] = useState([]);\r\n  const [recommendedTracks, setRecommendedTracks] = useState([]);\r\n  const [seedTracks, setSeedtracks] = useState([]);\r\n  const [pinnedPlaylists, setPinnedPlaylists] = useState([]);\r\n  const [currentPlaylist, setCurrentPlaylist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoadedData(prevState => [...prevState, { likedTracks: false }]);\r\n    getLikedTracks()\r\n      .then(r => setLikedTracks(r.items))\r\n      .then(() => {\r\n        setLoadedData(prevState => [...prevState, { likedTracks: true }]);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (seedTracks.length === 0) return;\r\n    getRecommendedTracks(seedTracks).then(r => {\r\n      const id = uniqueId();\r\n      setRecommendedTracks({ id: id, tracks: r.tracks } || []);\r\n    });\r\n  }, [seedTracks]);\r\n\r\n  const [allPlaylists, setAllPlaylists] = useState([]);\r\n  useEffect(() => {\r\n    const playlists = pinnedPlaylists.some(p => p.id === recommendedTracks.id)\r\n      ? pinnedPlaylists\r\n      : [...pinnedPlaylists, recommendedTracks];\r\n    setAllPlaylists(playlists);\r\n    setCurrentPlaylist(playlists[playlists.length - 1]);\r\n  }, [pinnedPlaylists, recommendedTracks]);\r\n\r\n  function toggleTracks(e) {\r\n    if (seedTracks.length >= 5 && e.target.checked) return;\r\n    if (seedTracks.some(track => track.id === e.target.name)) {\r\n      setSeedtracks(seedTracks.filter(track => track.id !== e.target.name));\r\n      return;\r\n    }\r\n    const pinnedTracks = pinnedPlaylists.reduce(\r\n      (p, c) => [...p, ...c.tracks],\r\n      []\r\n    );\r\n    const recommended = recommendedTracks.tracks\r\n      ? recommendedTracks.tracks.filter(track => track.id === e.target.name)\r\n      : [];\r\n    setSeedtracks([\r\n      ...seedTracks,\r\n      ...likedTracks\r\n        .filter(track => track.track.id === e.target.name)\r\n        .map(track => track.track),\r\n      ...pinnedTracks.filter(track => track.id === e.target.name),\r\n      ...recommended,\r\n    ]);\r\n  }\r\n\r\n  function isChecked(id) {\r\n    return seedTracks.some(seed => seed.id === id);\r\n  }\r\n\r\n  function pinPlaylist(playlist) {\r\n    if (pinnedPlaylists.some(pinned => pinned.id === playlist.id)) return;\r\n    setPinnedPlaylists([...pinnedPlaylists, playlist]);\r\n  }\r\n  function unPinPlaylist(id) {\r\n    setPinnedPlaylists(pinnedPlaylists.filter(pinned => pinned.id !== id));\r\n  }\r\n  function isPinned(id) {\r\n    return pinnedPlaylists.some(p => id === p.id);\r\n  }\r\n  const currentPlaylistIndex = allPlaylists.indexOf(currentPlaylist);\r\n  function displayNextPlaylist() {\r\n    if (currentPlaylistIndex + 1 === allPlaylists.length) return;\r\n    setCurrentPlaylist(allPlaylists[currentPlaylistIndex + 1]);\r\n  }\r\n  function displayPreviousPlaylist() {\r\n    if (currentPlaylistIndex <= 0) return;\r\n    setCurrentPlaylist(allPlaylists[currentPlaylistIndex - 1]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"playlists\">\r\n      <Seeds seedTracks={seedTracks}></Seeds>\r\n      <h2>Liked tracks</h2>\r\n      <ul>\r\n        {likedTracks && likedTracks.length\r\n          ? likedTracks.map(track => (\r\n              <li key={track.track.id}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={isChecked(track.track.id)}\r\n                  name={track.track.id}\r\n                  onChange={toggleTracks}\r\n                />\r\n                {track.track.artists[0].name} - {track.track.name}\r\n              </li>\r\n            ))\r\n          : 'Your liked tracks from Spotify will appear here.'}\r\n      </ul>\r\n      <h2>Recommended tracks</h2>\r\n      <NextPrevButtons\r\n        currentPlaylistIndex={currentPlaylistIndex}\r\n        allPlaylists={allPlaylists}\r\n        displayPreviousPlaylist={displayPreviousPlaylist}\r\n        displayNextPlaylist={displayNextPlaylist}\r\n      />\r\n      <Playlist\r\n        key={currentPlaylist.id}\r\n        playlist={currentPlaylist}\r\n        toggleTracks={toggleTracks}\r\n        pinPlaylist={pinPlaylist}\r\n        unPinPlaylist={unPinPlaylist}\r\n        isChecked={isChecked}\r\n        isPinned={isPinned}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Playlists;\r\n","import './App.css';\nimport { useState } from 'react';\nimport './styles/main.css';\n\nimport User from './components/User';\nimport Playlists from './components/Playlists';\n\nfunction App() {\n  const [loadedData, setLoadedData] = useState([]);\n\n  return (\n    <div className=\"App\">\n      {loadedData.some(data => !data) ? <p>Loading...</p> : ''}\n      <User setLoadedData={setLoadedData} />\n      <Playlists setLoadedData={setLoadedData} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}