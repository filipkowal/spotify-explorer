[{"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\index.js":"1","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\App.js":"2","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\reportWebVitals.js":"3","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\User.js":"4","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\Playlists.js":"5","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\services.js":"6","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\Playlist.js":"7"},{"size":500,"mtime":1610371758332,"results":"8","hashOfConfig":"9"},{"size":447,"mtime":1611945165814,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610371758332,"results":"11","hashOfConfig":"9"},{"size":461,"mtime":1611940352135,"results":"12","hashOfConfig":"9"},{"size":3787,"mtime":1612107521949,"results":"13","hashOfConfig":"9"},{"size":2610,"mtime":1612185659565,"results":"14","hashOfConfig":"9"},{"size":568,"mtime":1611932260908,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1xijk4v",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\index.js",[],["33","34"],"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\App.js",[],"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\reportWebVitals.js",[],"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\User.js",["35"],"import { useEffect, useState } from 'react';\r\n\r\nimport { getUser } from '../services';\r\n\r\nfunction User({ setLoadedData }) {\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    setLoadedData(prevState => [...prevState, { user: false }]);\r\n    getUser()\r\n      .then(r => setUser(r) || {})\r\n      .then(() => setLoadedData(prevState => [...prevState, { user: true }]));\r\n  }, []);\r\n  return <p>{user.display_name}</p>;\r\n}\r\nexport default User;\r\n","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\Playlists.js",["36"],"import { useEffect, useState } from 'react';\r\nimport uniqueId from 'lodash.uniqueid';\r\n\r\nimport { getLikedTracks, getRecommendedTracks } from '../services';\r\nimport Playlist from './Playlist';\r\n\r\nfunction Playlists({ loadedData, setLoadedData }) {\r\n  const [likedTracks, setLikedTracks] = useState([]);\r\n  const [recommendedTracks, setRecommendedTracks] = useState([]);\r\n  const [seedTracks, setSeedtracks] = useState([]);\r\n  const [pinnedPlaylists, setPinnedPlaylists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoadedData(prevState => [...prevState, { likedTracks: false }]);\r\n    getLikedTracks()\r\n      .then(r => setLikedTracks(r.items))\r\n      .then(() => {\r\n        setLoadedData(prevState => [...prevState, { likedTracks: true }]);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (seedTracks.length === 0) return;\r\n    getRecommendedTracks(seedTracks).then(r =>\r\n      setRecommendedTracks({ id: uniqueId(), tracks: r.tracks } || [])\r\n    );\r\n  }, [seedTracks]);\r\n\r\n  function toggleTracks(e) {\r\n    if (seedTracks.length >= 5 && e.target.checked) return;\r\n    if (seedTracks.some(track => track.id === e.target.name)) {\r\n      setSeedtracks(seedTracks.filter(track => track.id !== e.target.name));\r\n      return;\r\n    }\r\n    const pinnedTracks = pinnedPlaylists.reduce(\r\n      (p, c) => [...p, ...c.tracks],\r\n      []\r\n    );\r\n    const recommended = recommendedTracks.tracks\r\n      ? recommendedTracks.tracks.filter(track => track.id === e.target.name)\r\n      : [];\r\n    setSeedtracks([\r\n      ...seedTracks,\r\n      ...likedTracks\r\n        .filter(track => track.track.id === e.target.name)\r\n        .map(track => track.track),\r\n      ...pinnedTracks.filter(track => track.id === e.target.name),\r\n      ...recommended,\r\n    ]);\r\n  }\r\n\r\n  function isChecked(id) {\r\n    return seedTracks.some(seed => seed.id === id);\r\n  }\r\n\r\n  function pinPlaylist(playlist) {\r\n    if (pinnedPlaylists.some(pinned => pinned.id === playlist.id)) return;\r\n    setPinnedPlaylists([...pinnedPlaylists, playlist]);\r\n  }\r\n  function unPinPlaylist(id) {\r\n    setPinnedPlaylists(pinnedPlaylists.filter(pinned => pinned.id !== id));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p>Seeds: {5 - seedTracks.length}</p>\r\n      <p>Liked tracks</p>\r\n      <ul>\r\n        {likedTracks.length\r\n          ? likedTracks.map(track => (\r\n              <li key={track.track.id}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={isChecked(track.track.id)}\r\n                  name={track.track.id}\r\n                  onChange={toggleTracks}\r\n                />\r\n                {track.track.artists[0].name} - {track.track.name}\r\n              </li>\r\n            ))\r\n          : 'Loading liked tracks...'}\r\n      </ul>\r\n      <p>Recommended tracks</p>\r\n      {pinnedPlaylists.length\r\n        ? pinnedPlaylists.map(pinnedPlaylist => (\r\n            <ul key={pinnedPlaylist.id}>\r\n              <button onClick={() => unPinPlaylist(pinnedPlaylist.id)}>\r\n                Unpin\r\n              </button>\r\n              <Playlist\r\n                playlist={pinnedPlaylist}\r\n                toggleTracks={toggleTracks}\r\n                pinPlaylist={pinPlaylist}\r\n                isChecked={isChecked}\r\n              />\r\n            </ul>\r\n          ))\r\n        : ''}\r\n      <ul>\r\n        {recommendedTracks.tracks?.length ? (\r\n          <>\r\n            <button onClick={() => pinPlaylist(recommendedTracks)}>Pin</button>\r\n            <Playlist\r\n              playlist={recommendedTracks}\r\n              toggleTracks={toggleTracks}\r\n              pinPlaylist={pinPlaylist}\r\n              isChecked={isChecked}\r\n            />\r\n          </>\r\n        ) : (\r\n          'Select up to 5 tracks as seeds for recommendations.'\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Playlists;\r\n","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\services.js",[],"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\Playlist.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":13,"column":6,"nodeType":"43","endLine":13,"endColumn":8,"suggestions":"44"},{"ruleId":"41","severity":1,"message":"42","line":20,"column":6,"nodeType":"43","endLine":20,"endColumn":8,"suggestions":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoadedData'. Either include it or remove the dependency array. If 'setLoadedData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},{"desc":"50","fix":"52"},"Update the dependencies array to be: [setLoadedData]",{"range":"53","text":"54"},{"range":"55","text":"54"},[392,394],"[setLoadedData]",[761,763]]