[{"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\index.js":"1","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\App.js":"2","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\reportWebVitals.js":"3","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\User.js":"4","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\Playlists.js":"5","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\services.js":"6","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\Playlist.js":"7","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\assets\\icons.js":"8","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\NextPrevButtons.js":"9","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\Seeds.js":"10"},{"size":500,"mtime":1610371758332,"results":"11","hashOfConfig":"12"},{"size":475,"mtime":1612352620597,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610371758332,"results":"14","hashOfConfig":"12"},{"size":488,"mtime":1612355452836,"results":"15","hashOfConfig":"12"},{"size":4424,"mtime":1612375196922,"results":"16","hashOfConfig":"12"},{"size":2867,"mtime":1612440675986,"results":"17","hashOfConfig":"12"},{"size":1243,"mtime":1612368213682,"results":"18","hashOfConfig":"12"},{"size":1895,"mtime":1612375452205,"results":"19","hashOfConfig":"12"},{"size":593,"mtime":1612381283908,"results":"20","hashOfConfig":"12"},{"size":625,"mtime":1612376224182,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"d260ta",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\index.js",[],["45","46"],"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\App.js",[],"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\reportWebVitals.js",[],"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\User.js",["47"],"import { useEffect, useState } from 'react';\r\n\r\nimport { getUser } from '../services';\r\n\r\nfunction User({ setLoadedData }) {\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    setLoadedData(prevState => [...prevState, { user: false }]);\r\n    getUser()\r\n      .then(r => setUser(r) || {})\r\n      .then(() => setLoadedData(prevState => [...prevState, { user: true }]));\r\n  }, []);\r\n  return <p className=\"user secondary\">{user.display_name}</p>;\r\n}\r\nexport default User;\r\n","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\Playlists.js",["48"],"import { useEffect, useState } from 'react';\r\nimport uniqueId from 'lodash.uniqueid';\r\nimport '../styles/Playlists.css';\r\n\r\nimport { getLikedTracks, getRecommendedTracks } from '../services';\r\nimport Playlist from './Playlist';\r\nimport NextPrevButtons from './NextPrevButtons';\r\nimport Seeds from './Seeds';\r\n\r\nfunction Playlists({ setLoadedData }) {\r\n  const [likedTracks, setLikedTracks] = useState([]);\r\n  const [recommendedTracks, setRecommendedTracks] = useState([]);\r\n  const [seedTracks, setSeedtracks] = useState([]);\r\n  const [pinnedPlaylists, setPinnedPlaylists] = useState([]);\r\n  const [currentPlaylist, setCurrentPlaylist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoadedData(prevState => [...prevState, { likedTracks: false }]);\r\n    getLikedTracks()\r\n      .then(r => setLikedTracks(r.items))\r\n      .then(() => {\r\n        setLoadedData(prevState => [...prevState, { likedTracks: true }]);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (seedTracks.length === 0) return;\r\n    getRecommendedTracks(seedTracks).then(r => {\r\n      const id = uniqueId();\r\n      setRecommendedTracks({ id: id, tracks: r.tracks } || []);\r\n    });\r\n  }, [seedTracks]);\r\n\r\n  const [allPlaylists, setAllPlaylists] = useState([]);\r\n  useEffect(() => {\r\n    const playlists = pinnedPlaylists.some(p => p.id === recommendedTracks.id)\r\n      ? pinnedPlaylists\r\n      : [...pinnedPlaylists, recommendedTracks];\r\n    setAllPlaylists(playlists);\r\n    setCurrentPlaylist(playlists[playlists.length - 1]);\r\n  }, [pinnedPlaylists, recommendedTracks]);\r\n\r\n  function toggleTracks(e) {\r\n    if (seedTracks.length >= 5 && e.target.checked) return;\r\n    if (seedTracks.some(track => track.id === e.target.name)) {\r\n      setSeedtracks(seedTracks.filter(track => track.id !== e.target.name));\r\n      return;\r\n    }\r\n    const pinnedTracks = pinnedPlaylists.reduce(\r\n      (p, c) => [...p, ...c.tracks],\r\n      []\r\n    );\r\n    const recommended = recommendedTracks.tracks\r\n      ? recommendedTracks.tracks.filter(track => track.id === e.target.name)\r\n      : [];\r\n    setSeedtracks([\r\n      ...seedTracks,\r\n      ...likedTracks\r\n        .filter(track => track.track.id === e.target.name)\r\n        .map(track => track.track),\r\n      ...pinnedTracks.filter(track => track.id === e.target.name),\r\n      ...recommended,\r\n    ]);\r\n  }\r\n\r\n  function isChecked(id) {\r\n    return seedTracks.some(seed => seed.id === id);\r\n  }\r\n\r\n  function pinPlaylist(playlist) {\r\n    if (pinnedPlaylists.some(pinned => pinned.id === playlist.id)) return;\r\n    setPinnedPlaylists([...pinnedPlaylists, playlist]);\r\n  }\r\n  function unPinPlaylist(id) {\r\n    setPinnedPlaylists(pinnedPlaylists.filter(pinned => pinned.id !== id));\r\n  }\r\n  function isPinned(id) {\r\n    return pinnedPlaylists.some(p => id === p.id);\r\n  }\r\n  const currentPlaylistIndex = allPlaylists.indexOf(currentPlaylist);\r\n  function displayNextPlaylist() {\r\n    if (currentPlaylistIndex + 1 === allPlaylists.length) return;\r\n    setCurrentPlaylist(allPlaylists[currentPlaylistIndex + 1]);\r\n  }\r\n  function displayPreviousPlaylist() {\r\n    if (currentPlaylistIndex <= 0) return;\r\n    setCurrentPlaylist(allPlaylists[currentPlaylistIndex - 1]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"playlists\">\r\n      <Seeds seedTracks={seedTracks}></Seeds>\r\n      <h2>Liked tracks</h2>\r\n      <ul>\r\n        {likedTracks && likedTracks.length\r\n          ? likedTracks.map(track => (\r\n              <li key={track.track.id}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={isChecked(track.track.id)}\r\n                  name={track.track.id}\r\n                  onChange={toggleTracks}\r\n                />\r\n                {track.track.artists[0].name} - {track.track.name}\r\n              </li>\r\n            ))\r\n          : 'Your liked tracks from Spotify will appear here.'}\r\n      </ul>\r\n      <h2>Recommended tracks</h2>\r\n      <NextPrevButtons\r\n        currentPlaylistIndex={currentPlaylistIndex}\r\n        allPlaylists={allPlaylists}\r\n        displayPreviousPlaylist={displayPreviousPlaylist}\r\n        displayNextPlaylist={displayNextPlaylist}\r\n      />\r\n      <Playlist\r\n        key={currentPlaylist.id}\r\n        playlist={currentPlaylist}\r\n        toggleTracks={toggleTracks}\r\n        pinPlaylist={pinPlaylist}\r\n        unPinPlaylist={unPinPlaylist}\r\n        isChecked={isChecked}\r\n        isPinned={isPinned}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Playlists;\r\n","C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\services.js",[],"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\Playlist.js",[],"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\assets\\icons.js",[],"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\NextPrevButtons.js",[],"C:\\Users\\filip\\projects\\spotify-explorer\\client\\src\\components\\Seeds.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":13,"column":6,"nodeType":"55","endLine":13,"endColumn":8,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"54","line":24,"column":6,"nodeType":"55","endLine":24,"endColumn":8,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoadedData'. Either include it or remove the dependency array. If 'setLoadedData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["60"],["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"62","fix":"64"},"Update the dependencies array to be: [setLoadedData]",{"range":"65","text":"66"},{"range":"67","text":"66"},[392,394],"[setLoadedData]",[927,929]]